# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HvajX9H_B_ZykM96moDGNgJORl4kAe_8
"""

pip install python-pptx

import json
from pptx import Presentation
Conf_Sample={
  "presentation": [
    {
      "type" : "title",
      "title" : "The Title Text",
      "content" : "The Sub-Title Text"
    },
    {
      "type" : "text",
      "title" : "The Title Text",
      "content" : "The Long Text"
    },
    {
      "type" : "list",
      "title" : "The Title Text",
      "content" : [
        { "level" : 1, "text" : "The Level 1 Text"},
        { "level" : 2, "text" : "The Level 2 Text"},
        { "level" : 2, "text" : "The Level 2 Text"},
        { "level" : 1, "text" : "The Level 1 Text"}
      ]
    },
    {
      "type" : "picture",
      "title" : "The Title Text",
      "content" : "picture.png"
    },
    {
      "type" : "plot",
      "title" : "The Title Text",
      "content" : "sample.dat",
      "configuration" : {
        "x-label" : "The Plot X Label",
        "y-label" : "The Plot Y Label"
      }
    }
  ]
}
User_Wish=input("Do you want to enter your own cofiguration file, please enter yes or no ")
if User_Wish=="yes":
  konf=json.loads(input("Please enter your file, make sure it follows the structure of the sample.json file "))
elif User_Wish=="no":
  konf=Conf_Sample
elif User_Wish not in {"no","yes"}:
  print("Your input was not simple yes or no, so the default configuration value is taken ")
  konf=Conf_Sample
prs = Presentation()
for szotar in konf['presentation']:
  if szotar["type"]=="title":
    cim=szotar["title"]
    alcim=szotar["content"]
    title_slide_layout = prs.slide_layouts[0]
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = cim
    subtitle.text = alcim
  elif szotar["type"]=="text":
    cim=szotar["title"]
    alcim=szotar["content"]
    title_slide_layout = prs.slide_layouts[1]
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = cim
    subtitle.text = alcim

  elif szotar["type"]=="list":
    cim=szotar['title']
    bullet_slide_layout = prs.slide_layouts[1]

    slide = prs.slides.add_slide(bullet_slide_layout)
    shapes = slide.shapes

    title_shape = shapes.title
    body_shape = shapes.placeholders[1]

    title_shape.text = cim

    tf = body_shape.text_frame
    tf.text = 'This implementation is not yet able to create itemized lists'

    p = tf.add_paragraph()
    p.text = 'So this text is not yet the one you wished to see'
    p.level = 1

    p = tf.add_paragraph()
    p.text = 'Later versions may deal with this issue'
    p.level = 2
  elif szotar["type"]=="picture":
    cim=szotar["title"]
    kepcim=szotar["content"]
    title_slide_layout = prs.slide_layouts[1]
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = cim
    subtitle.text = f'This slide should display the image file {kepcim}, this version do not yet handle that properly'
  elif szotar["type"]=="plot":
    cim=szotar["title"]
    adatok=szotar["content"]
    konfiguracio=szotar["configuration"]
    title_slide_layout = prs.slide_layouts[1]
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1]

    title.text = cim
    subtitle.text =f'This slide should display the content of the data file {adatok}, this version do not yet handle that properly'

prs.save('PowerPoint_from_JSON_Input.pptx')